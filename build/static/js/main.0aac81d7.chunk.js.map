{"version":3,"sources":["assets/logo-dark.png","assets/logo3.png","assets/p.jpg","assets/t.jpg","constant.js","lib/jsUtils.js","components/App/PrivateRoute.js","components/Header/AuthenticatedNavBar.js","components/Header/NonAuthenticatedNavBar.js","components/Header/Header.js","components/Layout/Layout.js","helper/jwtHelper.js","components/Authentication/Login.js","components/Authentication/SignUp.js","components/Post/PostDelete.js","components/Post/PostEdit.js","components/Post/Post.js","components/Drafts/Drafts.js","components/CreatePost/CreatePost.js","components/SinglePostView/QrComponent.js","components/SinglePostView/ClassPublish.js","components/SinglePostView/PercentageChart.js","components/SinglePostView/ChartsComponent.js","components/SinglePostView/ClassInfoSubscription.js","components/SinglePostView/SinglePostView.js","components/PostAnswersForm/ThanksForSubmitting.js","components/PostAnswersForm/PostAnswersForm.js","components/PostAnswersForm/AnswerPage.js","components/Public/Public.js","components/App/App.js","index.js","lib/appTheme/index.js"],"names":["module","exports","__webpack_require__","p","AUTH_TOKEN","SIGN_UP","SIGN_IN","ROOMS","CREATE_NEW_POST","ROOM","SINGLE_ROOM","isAuthenticated","localStorage","getItem","baseIsFunction","value","Uint8Array","isObject","item","Array","isArray","findFirst","objTree","pattern","findKeys","Object","keys","run","obj","i","len","length","key","isMatch","result","PrivateRoute","_ref","Component","component","rest","objectWithoutProperties","react_default","a","createElement","react_router","assign","render","props","to","pathname","state","from","location","useStyles","makeStyles","theme","text","color","LogOutDialog","_useState3","useState","_useState4","slicedToArray","open","setOpen","Dialog","disableBackdropClick","disableEscapeKeyDown","maxWidth","DialogTitle","id","DialogContent","dividers","aria-label","role","DialogActions","Button","autoFocus","onClick","removeItem","window","href","AuthenticatedNavBar","classes","_useState","_useState2","showLogoutDialog","setShowLogOutDialog","Link","className","AuthenticatedNavBar_LogOutDialog","NonAuthenticatedNavBar","_title","appBar","backgroundColor","logoIcon","marginRight","menuButton","spacing","titleContainer","textDecoration","title","display","defineProperty","breakpoints","up","toolbarGutters","margin","withRouter","isLoginOrSignUpPage","includes","AppBar","position","Toolbar","gutters","Box","alignItems","src","Logo","alt","width","Typography","variant","justifyContent","style","marginLeft","Header_AuthenticatedNavBar","Header_NonAuthenticatedNavBar","@global","html , body , #root","height","root","gridTemplateRows","body","children","_location$pathname","react","CssBaseline","components_Header_Header","isTokenExpired","token","date","decoded","decode","exp","Date","setUTCSeconds","getTokenExpirationDate","valueOf","offsetSeconds","Copyright","align","getFullYear","LOGIN_USER_MUTATION","gql","_templateObject","image","backgroundImage","concat","sideImage","backgroundRepeat","palette","type","grey","backgroundSize","backgroundPosition","paper","flexDirection","avatar","secondary","main","form","marginTop","submit","SignInSide","refreshTokenFn","_location$state","_state$from","email","setEmail","password","setPassword","_useState5","_useState6","redirectToReferrer","setRedirectToReferrer","_useMutation","useMutation","onCompleted","login","Grid","container","xs","sm","md","Paper","elevation","square","textAlign","marginBottom","LogoDark","noValidate","onSubmit","e","preventDefault","variables","TextField","onChange","target","required","fullWidth","label","name","autoComplete","mt","SIGNUP_USER_MUTATION","SignUp_templateObject","INITIAL_INFO","SignUpSide","info","setInfo","signup","changeHandler","objectSpread","SignUp_Copyright","DELETE_MUTATION","PostDelete_templateObject","backdrop","zIndex","drawer","DeletePostConfirmDialog","_ref2","onConfirm","onClose","Dialog_default","DialogTitle_default","DialogContent_default","DialogActions_default","DeletePost","refresh","showConfirmDialog","setShowConfirmDialog","_useMutation2","deletePost","loading","Backdrop_default","CircularProgress_default","IconButton","DeleteOutlined_default","PostDelete_DeletePostConfirmDialog","then","UPDATE_MUTATION","PostEdit_templateObject","VALIDATION_INITIAL_STATE","isValid","errorMsgs","EditPostConfirmDialog","PropsTitle","PropsContent","content","_useState7","_useState8","validInfo","setValidInfo","_validInfo$errorMsgs","useEffect","TextField_default","placeholder","error","Boolean","helperText","_ref3","multiline","rows","rowsMax","_ref4","newValidInfo","validateForm","UpdatePost","updateDraft","EditOutlined_default","PostEdit_EditPostConfirmDialog","Post","post","Card","CardActionArea","CardContent","gutterBottom","noWrap","CardActions","PostDelete","PostEdit","DRAFTS_QUERY","Drafts_templateObject","_state$shouldRefetch","shouldRefetch","needRefetch","setNeedRefetch","_useQuery","useQuery","options","fetchPolicy","_useQuery$data","data","refetch","_data$drafts","drafts","Backdrop_Backdrop","CircularProgress_CircularProgress","Container","GridList","cellHeight","cols","map","draft","GridListTile","isPublished","published","CREATE_DRAFT_MUTATION","CreatePost_templateObject","submitBtn","selection","answerTypesWrapper","gridTemplateColumns","gridGap","fieldWrapper","& > div ","fieldsContainer","CreatePost","createDraft","_useForm","useForm","control","reset","handleSubmit","watch","errors","_useFieldArray","useFieldArray","fields","append","remove","generalAnswerType","fixed","react_hook_form_es","as","rules","defaultValue","disabled","select","selected","answerType","MenuItem","locationInput","index","labelName","typeName","hasFieldError","isErrorLabel","isErrorType","flex","minWidth","Delete_default","FormControlLabel","Checkbox","CREATE_CLASS_MUTATION","QrComponent_templateObject","down","postId","selectedClassId","setClassName","keyValue","setKeyValue","createClass","QRvalue","FullScreenDialog","renderQr","size","qrcode_react_lib_default","level","justifyItems","Transition","React","forwardRef","ref","Slide","direction","_React$useState","_React$useState2","_useWindowSize","setSize","useLayoutEffect","updateSize","innerWidth","innerHeight","addEventListener","removeEventListener","useWindowSize","fullScreen","TransitionComponent","CLASS_PUBLISH_MUTATION","ClassPublish_templateObject","GreenSwitch","withStyles","switchBase","&$checked","&$checked + $track","checked","track","Switch","PublishClass","publishClass","FormControlLabel_default","stopPropagation","templateData","valuesReg","0","10","20","30","40","50","60","70","80","90","100","getRandomColor","Math","floor","random","processData","answers","submittedFormsCount","localValuesReg","forEach","answer","undefined","val","subject","A","fullMark","computeAvg","arr","answersArr","Number","reduce","b","PercentageChart","chartsInfo","field","slice","relativeClassAnswers","avg","getChartsData","es6","cx","cy","offset","dataKey","stroke","fill","fillOpacity","barSize","strokeDasharray","domain","renderTextTypeAnswers","showNames","ExpansionPanel","ExpansionPanelSummary","expandIcon","ExpandMore_default","ExpansionPanelDetails","author","Divider","renderPercentageTypeAnswers","SinglePostView_PercentageChart","ChartsComponent","setShowNames","_data$class","class","classInfo","_classInfo$attendees","attendees","anonymous","ChartsComponent_ShowAttendeesList","Switch_Switch","fieldsByType","accum","fieldType","push","percentage","renderMixedTypeAnswers","ShowAttendeesList","handleClose","edge","Close_default","List","attendee","ListItem","ListItemText","primary","moment","createdAt","format","CLASS_INFO_QUERY","ClassInfoSubscription_templateObject","ATTENDEES_SUBSCRIPTION","_templateObject2","CommentsPageWithData","subscribeToMore","ClassInfoSubscription_ClassInfoSection","subscribeToMoreAttendees","document","classId","updateQuery","prev","subscriptionData","newFeedItem","attendeeSubscription","ClassInfoSection","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","esm_createClass","_this$props","SinglePostView_ChartsComponent","POST_QUERY","SinglePostView_templateObject","padding","topSectionsWrapper","selectionRoot","& .MuiSelect-select","sectionPlaceholder","match","history","_match$params","params","setSelectedClassId","_data$post","_post$classes","postClasses","ClassPublish","SinglePostView_QrComponent","ThanksForSubmitting","justify","TimeIsOut","FIELDS_QUERY","PostAnswersForm_templateObject","CREATE_ATTENDEE","PostAnswersForm_templateObject2","createAttendee","submitting","isSubmitted","setIsSubmitted","postClass","_postClass$post","_post$fields","ThanksForSubmitting_TimeIsOut","ThanksForSubmitting_ThanksForSubmitting","_ref$name","CLASS_QUERY","AnswerPage_templateObject","white","AnswerPage","setClassId","isError","setClassInfo","_useLazyQuery","useLazyQuery","_useLazyQuery2","checkIsValid","logo","Public","verify","setToken","console","log","App","PropsToken","setItem","react_router_dom","components_Layout_Layout","exact","path","App_PrivateRoute","DraftsPage","SinglePostView","PostAnswersForm","httpLink","HttpLink","uri","httpLinkAuth","ApolloLink","operation","forward","tokenValue","setContext","headers","Authorization","wsLink","WebSocketLink","reconnect","connectionParams","link","split","query","_getMainDefinition","getMainDefinition","kind","client","ApolloClient","cache","InMemoryCache","connectToDevTools","MyApp","react_common_esm","ThemeProvider","createMuiTheme","src_MyApp","getElementById"],"mappings":"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","file":"static/js/main.0aac81d7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-dark.a6342633.png\";","module.exports = __webpack_public_path__ + \"static/media/logo3.afb15cd7.png\";","module.exports = __webpack_public_path__ + \"static/media/p.8a71a22c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/t.3acaf0de.jpg\";","export const USER_ID = 'user-id';\nexport const DOMAIN =\"http://localhost:3000/\";\nexport const LANDING = '/';\nexport const AUTH_TOKEN = 'AUTH_TOKEN';\nexport const SIGN_UP = '/signup';\nexport const SIGN_IN = '/login';\nexport const ROOMS = '/rooms';\nexport const BLOG = '/blog';\nexport const CREATE_NEW_POST=\"/create-post\";\nexport const ROOM = '/room';\nexport const SINGLE_ROOM = '/room/:id';\n\nexport const ACCOUNT = '/account';\nexport const ADMIN = '/admin';\nexport const EXPLORE = '/explore';\nexport const TUTORIALS = '/tutorials';\nexport const TUTORIAL = '/tutorials/:tutorialId';\nexport const GROUP = '/tutorials/:tutorialId/:groupId';\nexport const SLIDES = '/tutorials/:tutorialId/:groupId/slides';\nexport const SLIDE = '/tutorials/:tutorialId/:groupId/:slideId';\nexport const SINGLE_SLIDE = '/:slideId';\n","import {AUTH_TOKEN} from \"../constant\";\n\nexport function canView(me) {\n    return true;\n}\nexport function canEdit(me) {\n    return true;//me && me.roles && me.roles.includes(\"ADMIN\");\n}\n\nexport function noop() {\n}\n\nexport function setToken(token) {\n    localStorage.setItem(AUTH_TOKEN, JSON.stringify(token));\n}\n\nexport function isAuthenticated() {\n    return !!localStorage.getItem(AUTH_TOKEN);\n}\n\nexport function signOut() {\n    return localStorage.removeItem(AUTH_TOKEN);\n}\n\nexport function isString(value) {\n    return typeof value === 'string' || value instanceof String;\n}\n\nconst baseIsFunction = function(value) {\n    // Avoid a Chakra JIT bug in compatibility modes of IE 11.\n    // See https://github.com/jashkenas/underscore/issues/1621 for more details.\n    return typeof value === 'function' || false;\n};\n\nexport const isFunction = !(baseIsFunction(/x/) || (Uint8Array && !baseIsFunction(Uint8Array))) ? baseIsFunction : function(value) {\n    // The use of `Object#toString` avoids issues with the `typeof` operator\n    // in older versions of Chrome and Safari which return 'function' for regexes\n    // and Safari 8 equivalents which return 'object' for typed array constructors.\n    return Object.prototype.toString.call(value) === '[object Function]';\n};\n\nexport function guid() {\n    let d = new Date().getTime();\n    const uuid = 'guid_xxxxxxxxxxxx4xxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = (d + Math.random() * 16) % 16 | 0;\n        d = Math.floor(d / 16);\n        return (c === 'x' ? r : ((r & 0x7) | 0x8)).toString(16);\n    });\n    return uuid;\n}\n\n\nexport function equals(o1, o2, params) {\n    try {\n\n        if (!params)\n            params = {};\n\n        if (o1 === o2)\n            return true;\n\n        if (typeof (o1) !== typeof (o2))\n            return false;\n\n        if (typeof (o1) === 'function')\n            return true;\n\n        //            if(o1.equals)\n        //                return o1.equals(o2);\n        //\n        //            if(o2.equals)\n        //                return o2.equals(o1);\n\n\n        // special case for comparing dom elements\n        if (o1.tagName && o1.nodeName) {\n            if (o1.id || o2.id)\n                return o1.id === o2.id;\n            else\n                return o1 === o2;\n        }\n\n        if (params.loose && o1.id)\n            return (o1.id === o2.id);\n\n        if (o1 instanceof Date) {\n            return (o1.getTime() === o2.getTime());\n        } else if (Array.isArray(o1)) {\n            if (o1.length !== o2.length)\n                return false;\n\n            for (var i = 0; i < o1.length; i++) {\n                if (params.avoidAttrs && params.avoidAttrs[i])\n                    continue;\n                if (!equals(o1[i], o2[i], params)) {\n                    return false;\n                }\n            }\n        } else if (typeof (o1) === 'object') {\n\n            var len1 = 0;\n            var len2 = 0;\n            for (let key in o1) {\n                if (params.avoidAttrs && params.avoidAttrs[key])\n                    continue;\n                if (o1[key] === undefined || o1[key] === null)\n                    continue;\n                len1++;\n            }\n            for (let key in o2) {\n                if (params.avoidAttrs && params.avoidAttrs[key])\n                    continue;\n                if (o2[key] === undefined || o2[key] === null)\n                    continue;\n                len2++;\n\n                if (!equals(o1[key], o2[key], params)) {\n                    return false;\n                }\n            }\n            return (len1 === len2);\n        } else {\n            return (o1 === o2);\n        }\n        return true;\n\n    } catch (e) {\n        return false;\n    }\n}\n\nexport function isObject(item) {\n    return (item && typeof item === 'object' && !Array.isArray(item));\n}\n\nexport function toArray(val) {\n    if (val === undefined || val === null)\n        return [];\n    if (!Array.isArray(val))\n        val = [val];\n    return val;\n}\n\nexport function clone(obj) {\n    return JSON.parse(JSON.stringify(obj));\n}\n\nexport const isArray = Array.isArray;\n\nexport function deepMixin(source, target, noArrayConcat) {\n    // summary: Does a deep merge of the given target into the given source.\n    // Note that arrays are concatenated during the merge unless noArrayConcat param is set to true.\n\n    // Note: Merging joins objects, but if an array is found it concatenates the values.  As a result, merging two query configs only merges the attributes of the config, but the child arrays are concatenated not merged.\n    if (source === undefined || target === undefined || source === target)\n        return;\n\n    if (!noArrayConcat && isArray(source)) {\n        for (var i = 0; i < target.length; i++)\n            source.push(target[i]); // join the array\n    } else if (isObject(source)) {\n        for (var key in target) {\n            if (source[key] && (isArray(source[key]) || isObject(source[key])))\n                deepMixin(source[key], target[key], noArrayConcat);\n            else\n                source[key] = target[key];\n        }\n    }\n    return source;\n}\n\n\nexport function millisecondsToSeconds(milliseconds) {\n    return Math.ceil(milliseconds / 1000)\n}\n\nexport function secondsToMilliseconds(seconds) {\n    return seconds * 1000;\n}\n\nexport function createPlayManager() {\n\n    let timeoutHandle,\n        localCurrentTime;\n    // startTime;\n\n    const cancelTimeout = () => {\n        if (timeoutHandle) {\n            clearTimeout(timeoutHandle);\n            timeoutHandle = null;\n        }\n    };\n\n    const update = function (props) {\n        const {\n            startTimeStamp,\n            startTime,\n            currentTime,\n            playing,\n            isEnded\n        } = props;\n\n        if (currentTime !== localCurrentTime) {\n            cancelTimeout();\n            localCurrentTime = currentTime;\n        }\n\n        if (playing) {\n\n            if (props.maxDuration) {\n\n                const maxDuration = props.maxDuration;\n\n                if(currentTime >= maxDuration && !isEnded) {\n                    props.onChange({\n                        isEnded : true,\n                        playing : false // stop when end is reached\n                    });\n                    // if(scene.loop) {\n                    //     props.onChange({\n                    //         currentTime : 1000 // restart\n                    //     });\n                    // } else {\n                    //     props.onChange({\n                    //         playing : false // stop when end is reached\n                    //     });\n                    // }\n                }\n\n                if (!timeoutHandle) {\n                    timeoutHandle = setTimeout(() => {\n                        timeoutHandle = null;\n\n                        if (playing) {\n                            props.onChange({\n                                currentTime : Date.now() - startTimeStamp + startTime // in milliseconds\n                            });\n                        }\n                    }, 100);\n                }\n            }\n        } else {\n            // startTime = null;\n            cancelTimeout();\n        }\n    };\n\n    return {\n        update,\n        destroy : function() {\n            cancelTimeout();\n        }\n    };\n}\n\n\nexport function findFirst(objTree, pattern) {\n    var findKeys = Object.keys(pattern);\n\n    var isMatch = function (obj) {\n        for (var i = 0, len = findKeys.length; i < len; i++) {\n            var key = findKeys[i];\n            var equals = obj[key] === pattern[key];\n            if (!equals)\n                return false;\n        }\n        return true;\n    };\n\n    var run = function (obj) {\n        if (isObject(obj) && obj !== null) {\n\n            if (isMatch(obj))\n                return obj;\n\n            for (var key in obj) {\n                let result = run(obj[key]);\n                if (result)\n                    return result;\n            }\n        } else if (Array.isArray(obj)) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                let result = run(obj[i]);\n                if (result)\n                    return result;\n            }\n        }\n    };\n\n    return run(objTree);\n};\n\n\nexport function findAndReplace(objTree, pattern) {\n    var cloneOfPattern = clone(pattern);\n    var isMatch = function (obj) {\n        var findKeys = Object.keys(cloneOfPattern);\n        for (var i = 0, len = findKeys.length; i < len; i++) {\n            var key = findKeys[i];\n            var founded = obj.hasOwnProperty(key);\n            if (founded) {\n                obj[key] = cloneOfPattern[key]\n                delete cloneOfPattern[key];\n            }\n        }\n    };\n\n    var run = function (obj) {\n        if (isObject(obj) && obj !== null) {\n\n            isMatch(obj)\n\n            for (var key in obj) {\n                let result = run(obj[key]);\n                if (result)\n                    return result;\n            }\n        } else if (Array.isArray(obj)) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                let result = run(obj[i]);\n                if (result)\n                    return result;\n            }\n        }\n    };\n\n    return run(objTree);\n};\n\n\nexport function debounce(func, wait) {\n    let timeout;\n    return function () {\n        const context = this,\n            args = arguments;\n\n        const later = function () {\n            timeout = null;\n            func.apply(context, args);\n        };\n        clearTimeout(timeout);\n        timeout = setTimeout(later, wait);\n    };\n};\n\n\nexport function urlHasParams(url) {\n    const arr = url.split('?');\n    return url.length > 1 && arr[1] !== '';\n}\n\nexport function urlHasTimeParam(url) {\n\n    const newUrl = new URL(url),\n        queryString = newUrl.search;\n\n    const urlParams = new URLSearchParams(queryString);\n    return urlParams.has('t')\n}\n\nexport function overrideTimeParam(url, timeValue) {\n    const newUrl = new URL(url),\n        query_string = url.search,\n        search_params = new URLSearchParams(query_string);\n\n    search_params.set('t', timeValue);\n    newUrl.search = search_params.toString();\n\n    return newUrl.toString();\n}\n\nexport function addUrlTimeParam(url, timeValue) {\n    const hasParam = urlHasParams(url);\n\n    if (hasParam) {\n        if (urlHasTimeParam(url)) {\n            return overrideTimeParam(url, timeValue);\n        }\n        return `${url}&t=${timeValue}`;\n    }\n    return `${url}?t=${timeValue}`;\n}\n\n\nexport function fromYouTubeUrlGetID(url) {\n    let ID = '';\n    url = url.replace(/(>|<)/gi, '').split(/(vi\\/|v=|\\/v\\/|youtu\\.be\\/|\\/embed\\/)/);\n    if(url[2] !== undefined) {\n        ID = url[2].split(/[^0-9a-z_]/i);\n        ID = ID[0];\n    } else {\n        ID = url;\n    }\n    return ID;\n}\n\n\nexport function findValByKey(object, key) {\n    let value;\n    Object.keys(object).some(function(k) {\n        if(k === key) {\n            value = object[k];\n            return true;\n        }\n        if(object[k] && typeof object[k] === 'object') {\n            value = findValByKey(object[k], key);\n            return value !== undefined;\n        }\n        return undefined;\n    });\n    return value || guid();\n}\n","import React from 'react'\nimport {Redirect, Route} from 'react-router-dom'\nimport {isAuthenticated} from \"../../lib/jsUtils\";\nimport {SIGN_IN} from \"../../constant\";\n\nconst PrivateRoute = ({component : Component, ...rest}) => (\n    <Route {...rest} render={(props) => (\n        isAuthenticated() ? <Component {...props} />\n            : <Redirect to={{\n                pathname : SIGN_IN,\n                state    : {from : props.location}\n            }}/>)\n    }/>\n);\n\nexport default PrivateRoute;\n","import React, {useState} from 'react';\nimport {Link} from \"react-router-dom\";\nimport Button from \"@material-ui/core/Button\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport {CREATE_NEW_POST, ROOMS, ROOM} from \"../../constant\";\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport Dialog from '@material-ui/core/Dialog';\nimport {signOut} from \"../../lib/jsUtils\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    text: {\n        color: 'white'\n    }\n}));\n\n\nconst AuthenticatedNavBar = () => {\n    const classes = useStyles();\n    const [showLogoutDialog, setShowLogOutDialog] = useState(false);\n    return <div>\n        <Button component={Link} to={ROOM} className={classes.text}>\n            Enter Room\n        </Button>\n        <Button component={Link} to={CREATE_NEW_POST} className={classes.text}>\n            Create Room\n        </Button>\n        <Button component={Link} to={ROOMS} className={classes.text}>\n            Rooms\n        </Button>\n        <Button onClick={() => setShowLogOutDialog(true)} className={classes.text}>\n            Log Out\n        </Button>\n        {showLogoutDialog ? <LogOutDialog/> : null}\n    </div>\n};\n\nconst LogOutDialog = () => {\n    const [open, setOpen] = useState(true);\n\n    const handleCancel = () => {\n        setOpen(false)\n    };\n\n    const handleOk = () => {\n        setOpen(false);\n        signOut();\n        window.location.href = '/'\n    };\n\n    return (\n        <Dialog\n            disableBackdropClick\n            disableEscapeKeyDown\n            maxWidth=\"xs\"\n            open={open}\n        >\n            <DialogTitle id=\"confirmation-dialog-title\">Log Out Confirmation</DialogTitle>\n            <DialogContent dividers>\n                Are you sure you want to logout? <span aria-label='sad' role='img'> &#128561;</span>\n            </DialogContent>\n            <DialogActions>\n                <Button autoFocus onClick={handleCancel} color=\"default\">\n                    Cancel\n                </Button>\n                <Button onClick={handleOk} color=\"secondary\">\n                    Log Out\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\n\nexport default AuthenticatedNavBar;\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport {makeStyles} from '@material-ui/core/styles';\nimport Button from \"@material-ui/core/Button\";\nimport {ROOM, BLOG, SIGN_IN, SIGN_UP} from \"../../constant\";\n\nconst useStyles = makeStyles((theme) => ({\n    text: {\n        color: 'white'\n    }\n}));\n\nconst NonAuthenticatedNavBar = () => {\n    const classes = useStyles();\n    return <div>\n        <Button component={Link} to={ROOM} className={classes.text}>\n            Enter Room\n        </Button>\n        <Button component={Link} to={BLOG} className={classes.text}>\n            Blog\n        </Button>\n        <Button component={Link} to={SIGN_IN} className={classes.text}>\n            Login\n        </Button>\n        <Button component={Link} to={SIGN_UP} className={classes.text}>\n            Sign Up\n        </Button>\n    </div>\n};\n\nexport default NonAuthenticatedNavBar;\n","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {Link, withRouter} from \"react-router-dom\";\nimport {SIGN_IN, SIGN_UP} from \"../../constant\";\nimport {isAuthenticated} from \"../../lib/jsUtils\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Logo from \"../../assets/logo3.png\";\nimport AuthenticatedNavBar from \"./AuthenticatedNavBar\";\nimport NonAuthenticatedNavBar from \"./NonAuthenticatedNavBar\";\n\nconst useStyles = makeStyles(theme => ({\n    appBar         : {\n        backgroundColor : \"#008DA0\",\n    },\n    logoIcon       : {marginRight : '0.5em'},\n    menuButton     : {\n        marginRight : theme.spacing(2),\n    },\n    titleContainer : {\n        textDecoration : 'none'\n    },\n    title          : {\n        display                      : 'none',\n        [theme.breakpoints.up('sm')] : {\n            display : 'inline-block',\n        },\n        color                        : \"white\",\n        fontSize                     : \"1.9rem\",\n        fontWeight                   : 500,\n        fontFamily                   : 'Roboto,Helvetica Neue,Arial,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol'\n    },\n    toolbarGutters : {\n        [theme.breakpoints.up('md')] : {\n            margin : theme.spacing(0, 20)\n        }\n    }\n}));\n\n\nconst Header = (props) => {\n    const {location} = props;\n    const classes = useStyles();\n    const isLoginOrSignUpPage = location.pathname.includes(SIGN_UP) || location.pathname.includes(SIGN_IN);\n\n    return (\n        <div>\n            <AppBar position=\"fixed\" className={classes.appBar}>\n                <Toolbar classes={{gutters : isLoginOrSignUpPage ? classes.toolbarGutters : ''}}>\n                    <Box component={Link}\n                        className={classes.titleContainer}\n                        to={'/'}\n                        display=\"flex\"\n                        alignItems=\"center\"\n                    >\n                        <img src={Logo} alt=\"\" width=\"50px\" className={classes.logoIcon}/>\n                        <Typography className={classes.title} variant=\"h6\">\n                            Real time feedo\n                        </Typography>\n                    </Box>\n\n                    <Box\n                        component='div'\n                        display=\"flex\"\n                        justifyContent=\"flex-end\"\n                        alignItems='center'\n                        style={{marginLeft : 'auto'}}\n                    >\n                        {isAuthenticated() ? <AuthenticatedNavBar/> : <NonAuthenticatedNavBar/>}\n                    </Box>\n                </Toolbar>\n            </AppBar>\n        </div>\n    );\n};\n\nexport default withRouter(Header);\n","import React, {Fragment} from \"react\";\nimport Header from \"../Header/Header\";\n// import Footer from \"../Footer/Footer\";\nimport {CssBaseline} from '@material-ui/core';\nimport {SIGN_IN, SIGN_UP} from \"../../constant\";\n\nimport {makeStyles} from '@material-ui/core/styles';\nimport {withRouter} from \"react-router-dom\";\n\nconst useStyles = makeStyles({\n    \"@global\" : {\n        'html , body , #root' : {\n            height : \"100%\"\n        }\n    },\n    root      : {\n        display          : \"grid\",\n        gridTemplateRows : \"64px 1fr\",\n        height           : '100%'\n    },\n    body: {\n        backgroundColor: 'white'\n    }\n});\n\nconst Layout = (props) => {\n    const classes = useStyles();\n    const {children, location} = props,\n        {pathname = ''} = location;\n\n    if(pathname === SIGN_IN || pathname === SIGN_UP)\n        return <Fragment>\n            <CssBaseline/>\n            {children}\n        </Fragment>\n\n    return <div className={classes.root}>\n        <CssBaseline/>\n        <Header/>\n        <div className={classes.body}>{children}</div>\n    </div>\n};\n\nexport default withRouter(Layout);\n","import decode from 'jwt-decode'\n\nexport function getTokenExpirationDate(token) {\n  const decoded = decode(token)\n  if (!decoded.exp) {\n    return null\n  }\n  const date = new Date(0) // The 0 here is the key, which sets the date to the epoch\n  date.setUTCSeconds(decoded.exp)\n  return date\n}\n\nexport function isTokenExpired(token) {\n  const date = getTokenExpirationDate(token)\n  const offsetSeconds = 0\n  if (date === null) {\n    return false\n  }\n  return !(date.valueOf() > new Date().valueOf() + offsetSeconds * 1000)\n}\n","import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {gql} from \"apollo-boost\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport {Redirect} from \"react-router-dom\";\nimport sideImage from '../../assets/p.jpg';\nimport {ROOM, ROOMS, SIGN_UP} from \"../../constant\";\nimport LogoDark from \"../../assets/logo-dark.png\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://github.com/AnnaNarim/\">\n                ANNA NARIM\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\n\nconst LOGIN_USER_MUTATION = gql`\n  mutation LoginMutation($email: String!, $password: String!) {\n    login(email: $email, password: $password) {\n      token\n      user {\n        id\n        name\n        email\n      }\n    }\n  }\n`;\n\n\nconst useStyles = makeStyles((theme) => ({\n    root   : {\n        height : '100vh',\n    },\n    image  : {\n        backgroundImage    : `url(${sideImage})`,\n        backgroundRepeat   : 'no-repeat',\n        backgroundColor    :\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n        backgroundSize     : 'cover',\n        backgroundPosition : 'center',\n    },\n    paper  : {\n        margin        : theme.spacing(10, 10),\n        display       : 'flex',\n        flexDirection : 'column',\n        alignItems    : 'center',\n    },\n    avatar : {\n        margin          : theme.spacing(1),\n        backgroundColor : theme.palette.secondary.main,\n    },\n    form   : {\n        width     : '100%', // Fix IE 11 issue.\n        marginTop : theme.spacing(1),\n    },\n    submit : {\n        margin : theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function SignInSide(props) {\n    const {refreshTokenFn, location} = props,\n        {state = {}} = location,\n        {from = {}} = state;\n    const classes = useStyles();\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false);\n    const [login] = useMutation(LOGIN_USER_MUTATION, {\n        onCompleted : ({login}) => {\n            if(refreshTokenFn)\n                refreshTokenFn(login.token);\n\n            setRedirectToReferrer(true);\n            setEmail('');\n            setPassword('');\n        }\n    });\n\n    if(redirectToReferrer) {\n        return <Redirect to={from.pathname || ROOMS}/>\n    }\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <Grid item xs={false} sm={4} md={5} className={classes.image}/>\n            <Grid item xs={12} sm={8} md={7} component={Paper} elevation={6} square>\n                <div className={classes.paper}>\n                    <div style={{ textAlign: 'center', marginBottom: 15 }}>\n                        <img src={LogoDark} alt=\"\" width=\"50px\" />\n                    </div>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Log in\n                    </Typography>\n                    <form className={classes.form} noValidate onSubmit={(e) => {\n                        e.preventDefault();\n                        login({variables : {email, password}})\n                    }}>\n                        <TextField\n                            value={email}\n                            onChange={e => setEmail(e.target.value)}\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                        />\n                        <TextField\n                            value={password}\n                            onChange={e => setPassword(e.target.value)}\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Sign In\n                        </Button>\n                        <Grid container>\n                            <Grid item>\n                                <Link href={SIGN_UP} variant=\"body2\">\n                                    {\"Don't have an account? Sign Up\"}\n                                </Link>\n                            </Grid>\n                        </Grid>\n                        <Box mt={5}>\n                            <Copyright/>\n                        </Box>\n                    </form>\n                </div>\n            </Grid>\n        </Grid>\n    );\n}\n","import React, {useState} from 'react';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Paper from '@material-ui/core/Paper';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {makeStyles} from '@material-ui/core/styles';\nimport {gql} from \"apollo-boost\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport {Redirect} from \"react-router-dom\";\nimport sideImage from '../../assets/t.jpg';\nimport {ROOMS, SIGN_IN} from \"../../constant\";\nimport LogoDark from \"../../assets/logo-dark.png\";\n\nfunction Copyright() {\n    return (\n        <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n            {'Copyright © '}\n            <Link color=\"inherit\" href=\"https://github.com/AnnaNarim\">\n                ANNA NARIM Production\n            </Link>{' '}\n            {new Date().getFullYear()}\n            {'.'}\n        </Typography>\n    );\n}\n\n\nconst SIGNUP_USER_MUTATION = gql`\n  mutation SignupMutation($email: String!, $password: String!, $name: String!) {\n    signup(email: $email, password: $password, name: $name) {\n      token\n      user {\n        id\n        name\n        email\n      }\n    }\n  }\n`;\n\n\nconst useStyles = makeStyles((theme) => ({\n    root   : {\n        height : '100vh',\n    },\n    image  : {\n        backgroundImage    : `url(${sideImage})`,\n        backgroundRepeat   : 'no-repeat',\n        backgroundColor    :\n            theme.palette.type === 'light' ? theme.palette.grey[50] : theme.palette.grey[900],\n        backgroundSize     : 'cover',\n        backgroundPosition : 'center',\n    },\n    paper  : {\n        margin        : theme.spacing(10, 10),\n        display       : 'flex',\n        flexDirection : 'column',\n        alignItems    : 'center',\n    },\n    avatar : {\n        margin          : theme.spacing(1),\n        backgroundColor : theme.palette.secondary.main,\n    },\n    form   : {\n        width     : '100%', // Fix IE 11 issue.\n        marginTop : theme.spacing(1),\n    },\n    submit : {\n        margin : theme.spacing(3, 0, 2),\n    },\n}));\n\nconst INITIAL_INFO = {\n    email    : '',\n    password : '',\n    name     : '',\n};\n\nexport default function SignUpSide(props) {\n    const {refreshTokenFn, location} = props,\n        {state = {}} = location,\n        {from = {}} = state;\n\n    const classes = useStyles();\n    const [info, setInfo] = useState(INITIAL_INFO);\n    const {name, email, password} = info;\n\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false);\n    const [signup] = useMutation(SIGNUP_USER_MUTATION, {\n        onCompleted : ({signup}) => {\n            if(refreshTokenFn)\n                refreshTokenFn(signup.token);\n\n            setRedirectToReferrer(true);\n            setInfo(INITIAL_INFO);\n        }\n    });\n\n    if(redirectToReferrer) {\n        return <Redirect to={from.pathname || ROOMS}/>\n    }\n\n    const changeHandler = (e) => setInfo({...info, [e.target.name] : e.target.value});\n\n    return (\n        <Grid container component=\"main\" className={classes.root}>\n            <Grid item xs={false} sm={4} md={5} className={classes.image}/>\n            <Grid item xs={12} sm={8} md={7} component={Paper} elevation={6} square>\n                <div className={classes.paper}>\n                    <div style={{ textAlign: 'center', marginBottom: 15 }}>\n                        <img src={LogoDark} alt=\"\" width=\"50px\" />\n                    </div>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        Sign up\n                    </Typography>\n                    <form className={classes.form} noValidate onSubmit={(e) => {\n                        e.preventDefault();\n                        signup({variables : {...info}})\n                    }}>\n                        <TextField\n                            value={name}\n                            onChange={changeHandler}\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"name\"\n                            label=\"User Name\"\n                            name=\"name\"\n                            autoComplete=\"name\"\n                            autoFocus\n                        />\n                        <TextField\n                            value={email}\n                            onChange={changeHandler}\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            id=\"email\"\n                            label=\"Email Address\"\n                            name=\"email\"\n                            autoComplete=\"email\"\n                            autoFocus\n                        />\n                        <TextField\n                            value={password}\n                            onChange={changeHandler}\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            required\n                            fullWidth\n                            name=\"password\"\n                            label=\"Password\"\n                            type=\"password\"\n                            id=\"password\"\n                            autoComplete=\"current-password\"\n                        />\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            className={classes.submit}\n                        >\n                            Sign Up\n                        </Button>\n                        <Grid container>\n                            <Grid item>\n                                <Link href={SIGN_IN} variant=\"body2\">\n                                    Already have an account!\n                                </Link>\n                            </Grid>\n                        </Grid>\n                        <Box mt={5}>\n                            <Copyright/>\n                        </Box>\n                    </form>\n                </div>\n            </Grid>\n        </Grid>\n    );\n}\n","import React, {Fragment, useState} from \"react\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from '@material-ui/icons/DeleteOutlined';\nimport {gql} from \"apollo-boost\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport Backdrop from \"@material-ui/core/Backdrop/Backdrop\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst DELETE_MUTATION = gql`\n    mutation deletePost($id: ID!) {\n        deletePost(id: $id) {\n            id\n        }\n    }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop : {\n        zIndex : theme.zIndex.drawer + 1,\n        margin : \"0 !important\"\n    }\n}));\n\nconst DeletePost = ({title, id, refresh}) => {\n    const classes = useStyles();\n    const [showConfirmDialog, setShowConfirmDialog] = useState(false);\n    const [deletePost, {loading}] = useMutation(DELETE_MUTATION);\n\n    return <Fragment>\n        <Backdrop className={classes.backdrop} open={loading}>\n            <CircularProgress color=\"inherit\"/>\n        </Backdrop>\n        <IconButton color='secondary' onClick={() => setShowConfirmDialog(true)}>\n            <DeleteIcon/>\n        </IconButton>\n        {showConfirmDialog ? <DeletePostConfirmDialog\n            title={title}\n            onConfirm={() => deletePost({variables : {id}}).then(() => {\n                setShowConfirmDialog(false);\n                refresh();\n            })}\n            onClose={() => setShowConfirmDialog(false)}\n        /> : null}\n    </Fragment>\n};\n\nconst DeletePostConfirmDialog = ({title, onConfirm, onClose}) => {\n    const [open, setOpen] = useState(true);\n\n    const handleCancel = () => {\n        setOpen(false);\n        onClose();\n    };\n\n    const handleOk = () => {\n        setOpen(false);\n        onConfirm();\n    };\n\n    return (\n        <Dialog\n            disableBackdropClick\n            disableEscapeKeyDown\n            maxWidth=\"xs\"\n            open={open}\n        >\n            <DialogTitle id=\"confirmation-dialog-title\">Delete Room confirmation</DialogTitle>\n            <DialogContent dividers>\n                Are you sure you want delete {title} post? &#128561;\n            </DialogContent>\n            <DialogActions>\n                <Button autoFocus onClick={handleCancel} color=\"default\">\n                    Cancel\n                </Button>\n                <Button onClick={handleOk} color=\"secondary\">\n                    Delete\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\n\nexport default DeletePost;\n","import React, {Fragment, useEffect, useState} from \"react\";\nimport Dialog from \"@material-ui/core/Dialog/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport EditIcon from '@material-ui/icons/EditOutlined';\nimport {gql} from \"apollo-boost\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport Backdrop from \"@material-ui/core/Backdrop/Backdrop\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\n\nconst UPDATE_MUTATION = gql`\n    mutation updateDraft($id: ID!,$title: String!, $content: String!) {\n        updateDraft(id: $id,title : $title, content:$content ) {\n            id\n        }\n    }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop : {\n        zIndex : theme.zIndex.drawer + 1,\n        margin : \"0 !important\"\n    }\n}));\n\nconst UpdatePost = ({title, id, content, refresh}) => {\n    const classes = useStyles();\n    const [showConfirmDialog, setShowConfirmDialog] = useState(false);\n    const [updateDraft, {loading}] = useMutation(UPDATE_MUTATION);\n\n    return <Fragment>\n        <Backdrop className={classes.backdrop} open={loading}>\n            <CircularProgress color=\"inherit\"/>\n        </Backdrop>\n        <IconButton color='primary' onClick={() => setShowConfirmDialog(true)}>\n            <EditIcon/>\n        </IconButton>\n        {showConfirmDialog ? <EditPostConfirmDialog\n            title={title}\n            content={content}\n            onConfirm={(info) => updateDraft({variables : {...info, id}}).then(() => {\n                setShowConfirmDialog(false);\n                refresh()\n            })}\n            onClose={() => setShowConfirmDialog(false)}\n        /> : null}\n    </Fragment>\n};\n\nconst VALIDATION_INITIAL_STATE = {isValid : true, errorMsgs : {}};\n\nconst validateForm = (info) => {\n    const errorMsgs = {};\n    if(!info.title) {\n        errorMsgs.title = 'Title is required field'\n    }\n\n    if(!info.content) {\n        errorMsgs.content = 'Content is required field'\n    }\n\n    return {isValid : !Object.keys(errorMsgs).length, errorMsgs}\n};\n\nconst EditPostConfirmDialog = ({title : PropsTitle, content : PropsContent, onConfirm, onClose}) => {\n    const [open, setOpen] = useState(true);\n    const [info, setInfo] = useState({title : PropsTitle, content : PropsContent});\n    const [validInfo, setValidInfo] = useState(VALIDATION_INITIAL_STATE);\n\n    const {title, content} = info,\n        {errorMsgs = {}} = validInfo;\n\n    useEffect(() => {\n        if(!validInfo.isValid) {\n            setValidInfo(VALIDATION_INITIAL_STATE)\n        }\n    }, [info]);\n\n    const handleCancel = () => {\n        setOpen(false);\n        onClose();\n    };\n\n    const handleOk = () => {\n        const newValidInfo = validateForm(info);\n        if(newValidInfo.isValid === true) {\n            onConfirm(info);\n            setOpen(false);\n        } else {\n            setValidInfo(newValidInfo)\n        }\n    };\n\n    return (\n        <Dialog\n            disableBackdropClick\n            disableEscapeKeyDown\n            maxWidth=\"xs\"\n            open={open}\n        >\n            <DialogTitle id=\"confirmation-dialog-title\">Edit</DialogTitle>\n            <DialogContent dividers>\n                <TextField\n                    autoFocus\n                    label=\"Title\"\n                    placeholder=\"Title\"\n                    error={Boolean(errorMsgs.title)}\n                    helperText={Boolean(errorMsgs.title) ? errorMsgs.title : ''}\n                    fullWidth\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    type=\"content\"\n                    value={title}\n                    name='title'\n                    onChange={({target}) => setInfo({...info, [target.name] : target.value})}\n                />\n                <TextField\n                    label=\"Content\"\n                    multiline\n                    rows={5}\n                    rowsMax={10}\n                    placeholder=\"Content\"\n                    error={Boolean(errorMsgs.content)}\n                    helperText={Boolean(errorMsgs.content) ? errorMsgs.content : ''}\n                    fullWidth\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    type=\"content\"\n                    value={content}\n                    name='content'\n                    onChange={({target}) => setInfo({...info, [target.name] : target.value})}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button autoFocus onClick={handleCancel} color=\"default\">\n                    Cancel\n                </Button>\n                <Button onClick={handleOk} color=\"primary\">\n                    Save\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n};\n\nexport default UpdatePost;\n","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Typography from '@material-ui/core/Typography';\nimport {Link} from \"react-router-dom\";\nimport DeletePost from \"./PostDelete\";\nimport UpdatePost from \"./PostEdit\";\n\nconst useStyles = makeStyles({\n    root : {\n        margin : 15\n    }\n});\n\nexport default function Post({ post, refresh}) {\n    const classes = useStyles();\n\n    const {title, id, content} = post;\n\n    return (\n        <Card className={classes.root} elevation={3}>\n            <CardActionArea component={Link} to={`/post/${id}`}>\n                <CardContent>\n                    <Typography gutterBottom variant=\"h5\" component=\"h2\" noWrap>\n                        {title}\n\n                        {/*{author.name}*/}\n                    </Typography>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {content}\n                    </Typography>\n                </CardContent>\n            </CardActionArea>\n            <CardActions style={{justifyContent : \"flex-end\"}}>\n                {/*<PublishPost id={id} isPublished={isPublished} refresh={refresh} />*/}\n                <DeletePost title={title} id={id} refresh={refresh}/>\n                <UpdatePost title={title} id={id} content={content} refresh={refresh}/>\n            </CardActions>\n        </Card>\n    );\n}\n","import React, {Fragment, useState} from 'react'\nimport Post from '../../components/Post/Post'\nimport {gql} from 'apollo-boost'\nimport {useQuery} from \"@apollo/react-hooks\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {withRouter} from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\n\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\n\nconst DRAFTS_QUERY = gql`\n    query DraftsQuery {\n        drafts {\n            id\n            content\n            title\n            published\n            author {\n                name\n            }\n        }\n    }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop : {\n        zIndex : theme.zIndex.drawer + 1\n    }\n}));\n\n\nconst DraftsPage = (props) => {\n    const {location} = props,\n        {state = {}} = location,\n        {shouldRefetch = false} = state;\n\n    const [needRefetch, setNeedRefetch] = useState(shouldRefetch);\n\n    const classes = useStyles();\n    const {loading, data = {}, refetch} = useQuery(DRAFTS_QUERY, {\n        options : {fetchPolicy : 'network-only',}\n    });\n    const {drafts = []} = data;\n\n    if(needRefetch) {\n        refetch();\n        setNeedRefetch(false);\n    }\n\n    return (\n        <Fragment>\n            <Backdrop className={classes.backdrop} open={loading}>\n                <CircularProgress color=\"inherit\"/>\n            </Backdrop>\n            <Container>\n                <h1>Drafts</h1>\n                <GridList cellHeight={\"auto\"} cols={2} spacing={10}>\n                    {drafts.map((draft) => (\n                        <GridListTile key={draft.id}>\n                            <Post\n                                post={draft}\n                                refresh={() => refetch()}\n                                isPublished={draft.published}\n                            />\n                        </GridListTile>\n                    ))}\n                </GridList>\n            </Container>\n        </Fragment>\n    )\n};\n\nexport default withRouter(DraftsPage);\n","import {gql} from \"apollo-boost\";\nimport React, {useState} from \"react\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {ROOMS} from \"../../constant\";\nimport {Redirect} from \"react-router-dom\";\nimport Container from \"@material-ui/core/Container\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport {findFirst} from \"../../lib/jsUtils\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport {Controller, useFieldArray, useForm} from \"react-hook-form\";\n\nconst CREATE_DRAFT_MUTATION = gql`\n    mutation CreateDraftMutation($title: String!,$anonymous:Boolean!, $content: String!, $answerType:String!, $fields:[inputField!]! ) {\n        createDraft(title: $title,anonymous: $anonymous content: $content, answerType : $answerType,fields: $fields) {\n            id\n            title\n            content\n            answerType\n        }\n    }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n    submitBtn          : {},\n    selection          : {\n        margin : \"15px 0\"\n    },\n    answerTypesWrapper : {\n        display             : \"grid\",\n        gridTemplateColumns : \"1fr auto\",\n        gridGap             : \"1em\",\n        alignItems          : 'baseline'\n    },\n    fieldWrapper       : {\n        display    : \"flex\",\n        alignItems : \"center\",\n        margin     : \"5px 0\",\n        \"& > div \" : {\n            marginRight : 8\n        }\n    },\n    fieldsContainer    : {\n        margin : \"15px 0\"\n    }\n}));\n\n\nconst CreatePost = (props) => {\n    const classes = useStyles();\n\n    const [redirectToReferrer, setRedirectToReferrer] = useState(false);\n    const [createDraft] = useMutation(CREATE_DRAFT_MUTATION);\n\n    const {control, reset, handleSubmit, watch, errors} = useForm();\n    const {fields, append, remove} = useFieldArray({control, name : \"fields\"});\n\n    if(redirectToReferrer) {\n        return <Redirect to={{\n            pathname : ROOMS,\n            state    : {shouldRefetch : true}\n        }}/>\n    }\n\n    const onSubmit = (data) => {\n        createDraft({variables : {...data}}).then(() => {\n            setRedirectToReferrer(true);\n            reset();\n        });\n    };\n\n    const generalAnswerType = watch(\"answerType\");\n\n    return <Container fixed>\n        <h1 style={{ color: \"#011627\" }}>Create Room</h1>\n        <form onSubmit={handleSubmit(onSubmit)}>\n            <Controller\n                autoFocus\n                label=\"Title\"\n                placeholder=\"Title\"\n                fullWidth\n                margin='normal'\n                variant=\"outlined\"\n                as={TextField}\n                rules={{required : true}}\n                error={!!errors.title}\n                helperText={!!errors.title ? \"This field is required\" : ''}\n                name='title'\n                defaultValue={''}\n                control={control}\n            />\n\n            <Controller\n                label=\"Content\"\n                placeholder=\"Content\"\n                fullWidth\n                margin='normal'\n                variant=\"outlined\"\n                multiline\n                rows={5}\n                rowsMax={10}\n                as={TextField}\n                rules={{required : true}}\n                error={!!errors.content}\n                helperText={!!errors.content ? \"This field is required\" : ''}\n                name='content'\n                defaultValue={''}\n                control={control}\n            />\n\n            <div className={classes.answerTypesWrapper}>\n                <Controller\n                    label=\"Select type of the answer\"\n                    disabled={Boolean(fields.length)}\n                    className={classes.selection}\n                    margin='normal'\n                    variant='outlined'\n                    as={TextField}\n                    select\n                    control={control}\n                    onChange={([selected]) => {\n                        append({label : \"\", type : selected.target.value});\n                        return selected\n                    }}\n                    rules={{required : true}}\n                    name='answerType'\n                    error={!!errors.answerType}\n                    helperText={!!errors.answerType ? \"This field is required\" : 'Please select preferred type of answers'}\n                    fullWidth\n                    defaultValue={''}\n                >\n                    <MenuItem value=\"\"><em>None</em></MenuItem>\n                    <MenuItem value={\"text\"}>Text</MenuItem>\n                    <MenuItem value={\"percentage\"}>Percentage</MenuItem>\n                    <MenuItem value={\"percentageAndText\"}>Text and Percentage</MenuItem>\n                </Controller>\n\n\n                <div>\n                    <Button disabled={!Boolean(generalAnswerType)} color='primary' variant=\"contained\"\n                        onClick={() => append({label : \"\", type : generalAnswerType})}\n                    >\n                        Add Field\n                    </Button>\n                </div>\n            </div>\n\n\n            <div className={classes.fieldsContainer}>\n                {fields.map((locationInput, index) => {\n                    const type = locationInput.type;\n                    const labelName = `fields[${index}].label`;\n                    const typeName = `fields[${index}].type`;\n\n                    const hasFieldError = !!(errors.fields && errors.fields.length);\n\n                    const isErrorLabel = hasFieldError ? Boolean(findFirst(errors.fields, {name : labelName})) : false;\n                    const isErrorType = hasFieldError ? Boolean(findFirst(errors.fields, {name : typeName})) : false;\n\n                    return (\n                        <div key={index} className={classes.fieldWrapper}>\n                            <Controller\n                                style={{flex : 1}}\n                                as={TextField}\n                                control={control}\n                                name={labelName}\n                                defaultValue={locationInput.label}\n                                label=\"Ask a question\"\n                                placeholder=\"Ask a question\"\n                                margin='normal'\n                                variant='outlined'\n                                rules={{required : true}}\n                                error={isErrorLabel}\n                                fullWidth\n                            />\n\n                            {type === \"percentageAndText\" ?\n                                <Controller\n                                    label=\"Select an answer type\"\n                                    style={{minWidth : 220}}\n                                    margin='normal'\n                                    variant='outlined'\n                                    as={TextField}\n                                    select\n                                    control={control}\n                                    rules={{required : true}}\n                                    name={typeName}\n                                    error={isErrorType}\n                                    defaultValue={''}\n                                >\n                                    <MenuItem value=\"\"><em>None</em></MenuItem>\n                                    <MenuItem value={'text'}>Text</MenuItem>\n                                    <MenuItem value={'percentage'}>Percentage</MenuItem>\n                                </Controller>\n                                : <Controller\n                                    style={{display : \"none\"}}\n                                    as={TextField}\n                                    control={control}\n                                    name={typeName}\n                                    defaultValue={locationInput.type}\n                                    label=\"Ask a question\"\n                                    placeholder=\"Ask a question\"\n                                    margin='normal'\n                                    variant='outlined'\n                                    disabled={true}\n                                />\n                            }\n\n                            <IconButton disabled={fields.length === 1} onClick={() => remove(index)}>\n                                <DeleteIcon/>\n                            </IconButton>\n                        </div>\n                    );\n                })}\n            </div>\n\n\n            <FormControlLabel\n                control={\n                    <Controller\n                        as={Checkbox}\n                        control={control}\n                        defaultValue={true}\n                        name=\"anonymous\" color=\"primary\"/>\n                }\n                label=\"Leave answer anonymously\"\n            />\n\n            <Button className={classes.submitBtn} color='primary' variant=\"contained\" type=\"submit\">\n                Create\n            </Button>\n        </form>\n    </Container>;\n};\nexport default CreatePost;\n","import React, {Fragment, useEffect, useLayoutEffect, useState} from 'react'\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {withRouter} from \"react-router-dom\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Button from \"@material-ui/core/Button\";\nimport QRCode from 'qrcode.react';\nimport Dialog from '@material-ui/core/Dialog';\nimport Slide from '@material-ui/core/Slide';\nimport {gql} from \"apollo-boost\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport Backdrop from \"@material-ui/core/Backdrop/Backdrop\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {DOMAIN} from \"../../constant\";\n\nconst CREATE_CLASS_MUTATION = gql`\n    mutation CreateClasstMutation($name: String!, $postId: ID! ) {\n        createClass(name: $name, postId: $postId) {\n            id\n        }\n    }\n`;\n\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop : {\n        zIndex : theme.zIndex.drawer + 1,\n        margin : \"0 !important\"\n    },\n    appBar   : {\n        position : 'relative',\n    },\n    title    : {\n        marginLeft : theme.spacing(2),\n        flex       : 1,\n    },\n    root     : {\n        display                        : \"grid\",\n        gridTemplateColumns            : \"1fr 1fr\",\n        gridGap                        : '1em',\n        height                         : \"100%\",\n        [theme.breakpoints.down('sm')] : {\n            gridTemplateColumns : 'auto',\n            gridTemplateRows    : \"1fr 1fr\",\n        }\n    }\n\n}));\n\nfunction useWindowSize() {\n    const [size, setSize] = useState([0, 0]);\n    useLayoutEffect(() => {\n        function updateSize() {\n            setSize([window.innerWidth, window.innerHeight]);\n        }\n\n        window.addEventListener('resize', updateSize);\n        updateSize();\n        return () => window.removeEventListener('resize', updateSize);\n    }, []);\n    return size;\n}\n\nconst QrComponent = ({postId, selectedClassId, refresh}) => {\n    const classes = useStyles();\n    const [className, setClassName] = useState('');\n    const [keyValue, setKeyValue] = useState('');\n    const [createClass, {loading}] = useMutation(CREATE_CLASS_MUTATION);\n\n\n    useEffect(() => {\n        setKeyValue(selectedClassId)\n    }, [selectedClassId]);\n\n\n    const QRvalue = DOMAIN + keyValue;\n\n    return (\n        <Fragment>\n            <Backdrop className={classes.backdrop} open={loading}>\n                <CircularProgress color=\"inherit\"/>\n            </Backdrop>\n            <div className={classes.root}>\n\n                <div style={{display : \"grid\", gridTemplateRows : \"1fr 1fr\", gridGap : '1em'}}>\n                    <TextField\n                        label=\"Class Name\"\n                        value={className}\n                        onChange={(e) => setClassName(e.target.value)}\n                    />\n\n                    <Button\n                        disabled={!className}\n                        style={{margin : \"15px 0\"}}\n                        color='primary'\n                        variant=\"contained\"\n                        onClick={() => createClass({\n                            variables : {\n                                name : className,\n                                postId\n                            }\n                        }).then(({data}) => setKeyValue(data.createClass.id)).then(() => refresh())}>\n                        Generate QR and Key\n                    </Button>\n                    <FullScreenDialog\n                        keyValue={keyValue}\n                        renderQr={(size) => <QRCode value={QRvalue} size={size} level={'H'}/>}/>\n                </div>\n\n                <div style={{\n                    display          : \"grid\",\n                    gridTemplateRows : \"1fr auto\",\n                    justifyItems     : \"center\",\n                    alignItems       : \"center\"\n                }}>\n                    <QRCode value={QRvalue} level={'H'}/>\n                    <Typography variant='h5'>{keyValue}</Typography>\n                </div>\n\n            </div>\n\n        </Fragment>\n    )\n\n};\n\nexport default withRouter(QrComponent);\n\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nfunction FullScreenDialog({renderQr, keyValue}) {\n    const [open, setOpen] = React.useState(false);\n    const [width] = useWindowSize();\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    const size = width / 2;\n\n    return (\n        <div>\n            <Button variant=\"outlined\" color=\"primary\" style={{width : \"100%\"}} onClick={handleClickOpen}>\n                Open full-screen QR\n            </Button>\n            <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n\n                <div style={{\n                    height       : \"100%\",\n                    width        : \"100%\",\n                    display      : 'grid',\n                    alignItems   : \"center\",\n                    justifyItems : \"center\",\n                    margin       : 10\n                }}>\n                    {renderQr(size / 1.3)}\n                    <Typography variant='h1'>{keyValue}</Typography>\n                </div>\n            </Dialog>\n        </div>\n    );\n}\n","import React, {Fragment} from \"react\";\nimport {gql} from \"apollo-boost\";\nimport {useMutation} from \"@apollo/react-hooks\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport Backdrop from \"@material-ui/core/Backdrop/Backdrop\";\nimport {makeStyles, withStyles} from \"@material-ui/core/styles\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch/Switch\";\n\nconst CLASS_PUBLISH_MUTATION = gql`\n    mutation publishClass($id: ID!, $published :Boolean!) {\n        publishClass(id: $id, published:$published) {\n            id\n            published\n        }\n    }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop : {\n        zIndex : theme.zIndex.drawer + 1,\n        margin : \"0 !important\"\n    }\n}));\n\nconst PublishClass = ({published, id, refresh}) => {\n    const classes = useStyles();\n    const [publishClass, {loading}] = useMutation(CLASS_PUBLISH_MUTATION);\n\n    return <Fragment>\n        <Backdrop className={classes.backdrop} open={loading}>\n            <CircularProgress color=\"inherit\"/>\n        </Backdrop>\n        <FormControlLabel\n            style={{marginRight : \"auto\"}}\n            control={\n                <GreenSwitch\n                    size=\"small\"\n                    checked={published}\n                    onChange={() => {\n                        publishClass({variables : {id, published : !published}}).then(() => refresh())\n                    }}\n                    onClick={(e) => {\n                        e.stopPropagation();\n                        e.preventDefault();\n                    }}\n                    color=\"secondary\"\n                />\n            }\n            label=\"Accept answers\"\n        />\n    </Fragment>\n};\n\n\nconst GreenSwitch = withStyles({\n    switchBase : {\n        color                : '#fafafa',\n        '&$checked'          : {\n            color : 'rgb(26,148,49)',\n        },\n        '&$checked + $track' : {\n            backgroundColor : 'rgb(26,148,49)'\n        },\n    },\n    checked    : {},\n    track      : {},\n})(Switch);\nexport default PublishClass;\n","import React from 'react';\nimport {\n    Bar,\n    BarChart,\n    CartesianGrid,\n    Label,\n    Legend,\n    PolarAngleAxis,\n    PolarGrid,\n    PolarRadiusAxis,\n    Radar,\n    RadarChart,\n    Tooltip,\n    XAxis,\n    YAxis,\n} from 'recharts';\nimport Typography from \"@material-ui/core/Typography\";\n\n\nconst templateData = [0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100];\n\nconst valuesReg = {\n    '0'   : 0,\n    '10'  : 0,\n    '20'  : 0,\n    '30'  : 0,\n    '40'  : 0,\n    '50'  : 0,\n    '60'  : 0,\n    '70'  : 0,\n    '80'  : 0,\n    '90'  : 0,\n    '100' : 0\n};\n\nfunction getRandomColor() {\n    var letters = '0123456789ABCDEF';\n    var color = '#';\n    for(var i = 0; i < 6; i++) {\n        color += letters[Math.floor(Math.random() * 16)];\n    }\n    return color;\n}\n\nconst processData = (answers, submittedFormsCount) => {\n\n    const localValuesReg = {...valuesReg};\n    answers.forEach(answer => {\n        const value = answer.value;\n\n        if(localValuesReg[value] !== undefined) {\n            localValuesReg[value] = localValuesReg[value] + 1\n        }\n    });\n\n    return templateData.map((val) => {\n        return {\n            subject  : val + \"%\",\n            A        : localValuesReg[val],\n            fullMark : submittedFormsCount,\n        }\n    })\n};\n\nconst computeAvg = (data) => {\n    const answersArr = data.map(item => Number(item.value));\n\n\n    const arrAvg = arr => arr.reduce((a, b) => a + b, 0) / arr.length;\n\n    return arrAvg(answersArr)\n\n};\n\nconst getChartsData = (fields, submittedFormsCount) => {\n    return fields.map((field) => {\n\n        return {\n            key   : field.id,\n            title : field.label.length > 10 ? field.label.slice(0, 10) + '...' : field.label,\n            data  : processData(field.relativeClassAnswers, submittedFormsCount),\n            avg   : computeAvg(field.relativeClassAnswers),\n            color : getRandomColor()\n        }\n    })\n};\n\nconst PercentageChart = ({fields, submittedFormsCount}) => {\n    const chartsInfo = getChartsData(fields, submittedFormsCount);\n\n    const data = chartsInfo.map(({title, avg}) => ({avg, title}));\n\n\n    return <div style={{display : \"grid\", gridTemplateColumns : \"1fr 1fr\", gridGap : \"1em\"}}>\n        {chartsInfo.map(({data, title, key, color}) => {\n            return <div key={key}>\n                <Typography align='center'>{title}</Typography>\n                <RadarChart cx={200} cy={115} width={350} height={250} data={data} key={key}>\n                    <Label value=\"Pages of my website\" offset={0} position=\"insideBottom\"/>\n                    <PolarGrid/>\n                    <PolarAngleAxis dataKey=\"subject\"/>\n                    <PolarRadiusAxis/>\n                    <Radar name=\"Percentage Result\" dataKey=\"A\" stroke={color} fill={color} fillOpacity={0.6}/>\n                </RadarChart>\n            </div>\n        })}\n\n        <BarChart width={data.length * 200} barSize={100} height={250} data={data}>\n            <CartesianGrid strokeDasharray=\"3 3\"/>\n            <XAxis dataKey=\"title\"/>\n            <YAxis domain={[0, 100]}/>\n            <Tooltip/>\n            <Legend/>\n            <Bar dataKey=\"avg\" fill={getRandomColor()}/>\n        </BarChart>\n    </div>\n};\n\nexport default PercentageChart\n\n","import React, {Fragment, useState} from 'react';\nimport ExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport ExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport {toArray} from \"../../lib/jsUtils\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport {makeStyles} from '@material-ui/core/styles';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItem from '@material-ui/core/ListItem';\nimport Button from \"@material-ui/core/Button\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport List from \"@material-ui/core/List\";\nimport CloseIcon from '@material-ui/icons/Close';\nimport PercentageChart from \"./PercentageChart\";\nimport moment from 'moment';\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nconst useStyles = makeStyles((theme) => ({\n    appBar : {\n        position : 'relative',\n    },\n    title  : {\n        marginLeft : theme.spacing(2),\n        flex       : 1,\n    },\n}));\n\nconst renderTextTypeAnswers = (fields, showNames) => {\n    return <div>\n        {fields.map(field => {\n            const answers = toArray(field.relativeClassAnswers);\n\n            return <ExpansionPanel key={field.id}>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon/>}>\n                    <Typography>{field.label}</Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails style={{display : \"block\"}}>\n                    {\n                        answers.map(answer => {\n                            return <div key={answer.id} style={{width : '100%', margin : \"10px 0\"}}>\n                                <Typography color='textSecondary'>{answer.value} {\n                                    showNames ? `- ${answer.author.name}` : ''\n                                }</Typography>\n\n                                <Divider/>\n                            </div>\n                        })\n                    }\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        })}\n    </div>\n};\n\nconst renderPercentageTypeAnswers = (fields, submittedFormsCount) => {\n    return <PercentageChart fields={fields} submittedFormsCount={submittedFormsCount}/>\n};\n\nconst renderMixedTypeAnswers = (fields, {submittedFormsCount, showNames}) => {\n    const fieldsByType = fields.reduce((accum, field) => {\n        const fieldType = field.type;\n\n        if(!accum[fieldType])\n            accum[fieldType] = [];\n\n        accum[fieldType].push(field);\n\n        return accum\n    }, {});\n\n    return <div style={{display : \"grid\", gridTemplateColumns : \"1fr 1fr\", gridGap : \"1em\"}}>\n        {renderTextTypeAnswers(fieldsByType.text, showNames)}\n        {renderPercentageTypeAnswers(fieldsByType.percentage, submittedFormsCount)}\n    </div>;\n};\n\nconst ChartsComponent = ({data}) => {\n\n    const [showNames, setShowNames] = useState(false);\n\n    const {class : classInfo = {}} = data,\n        {post, attendees = []} = classInfo,\n        {answerType, anonymous, fields} = post;\n\n    const submittedFormsCount = attendees.length;\n\n    if(!post)\n        return null;\n\n    return <Fragment>\n        {!anonymous ? <div style={{margin : 10}}>\n            <ShowAttendeesList attendees={attendees}/>\n            <FormControlLabel\n                style={{marginLeft : 20}}\n                control={\n                    <Switch\n                        checked={showNames}\n                        color=\"primary\"\n                        onChange={(e) => setShowNames(e.target.checked)}\n                    />\n                }\n                label={\"Show answers with attendees` names\"}\n            />\n        </div> : null}\n        {\n            answerType === \"text\" ? renderTextTypeAnswers(fields, showNames) :\n                answerType === \"percentage\" ? renderPercentageTypeAnswers(fields, submittedFormsCount) :\n                    answerType === \"percentageAndText\" ? renderMixedTypeAnswers(fields, {\n                        submittedFormsCount,\n                        showNames\n                    }) : null\n\n        }\n    </Fragment>\n};\n\n\nexport default ChartsComponent\n\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nconst ShowAttendeesList = ({attendees}) => {\n    const classes = useStyles();\n    const [open, setOpen] = useState(false);\n\n    const handleClickOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    return (\n        <Fragment>\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n                Show Attendees List\n            </Button>\n            <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n                <AppBar className={classes.appBar}>\n                    <Toolbar>\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\n                            <CloseIcon/>\n                        </IconButton>\n                        <Typography variant=\"h6\" className={classes.title}>\n                            Attendees List\n                        </Typography>\n                    </Toolbar>\n                </AppBar>\n                <List>\n                    {\n                        attendees.map(attendee => {\n                            return <Fragment key={attendee.id}>\n                                <ListItem>\n                                    <ListItemText primary={attendee.name} secondary={moment(attendee.createdAt).format('MMMM Do YYYY, HH:mm:ss')}/>\n                                </ListItem>\n                                <Divider/>\n                            </Fragment>\n                        })\n                    }\n                </List>\n            </Dialog>\n        </Fragment>\n    );\n};\n","import {gql} from \"apollo-boost\";\nimport {useQuery} from \"@apollo/react-hooks\";\nimport React, {Component} from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport ChartsComponent from \"./ChartsComponent\";\n\nconst CLASS_INFO_QUERY = gql`\n    query ClassInfoQUery($id: ID!) {\n        class(id: $id) {\n            id\n            name\n            attendees{\n                id\n                name\n                createdAt\n            }\n            post {\n                anonymous\n                answerType\n                fields{\n                    id\n                    label\n                    type\n                    relativeClassAnswers(classId:$id){\n                        id\n                        value\n                        author{\n                            name\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n\nconst ATTENDEES_SUBSCRIPTION = gql`\n    subscription attendeeSubscription($classId: ID!) {\n        attendeeSubscription(classId: $classId) {\n            id\n            name\n            attendees{\n                id\n                name\n                createdAt\n            }\n            post {\n                anonymous\n                answerType\n                fields{\n                    id\n                    label\n                    type\n                    relativeClassAnswers(classId:$classId){\n                        id\n                        value\n                        author{\n                            name\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n\n\nexport default function CommentsPageWithData({selectedClassId}) {\n    const {subscribeToMore, ...result} = useQuery(CLASS_INFO_QUERY, {variables : {id : selectedClassId}});\n\n    return (\n        <ClassInfoSection\n            {...result}\n            subscribeToMoreAttendees={() =>\n                subscribeToMore({\n                    document    : ATTENDEES_SUBSCRIPTION,\n                    variables   : {classId : selectedClassId},\n                    updateQuery : (prev, {subscriptionData}) => {\n                        if(!subscriptionData.data) return prev;\n                        const newFeedItem = subscriptionData.data.attendeeSubscription;\n\n                        return Object.assign({}, prev, {\n                            class : {\n                                ...prev.class,\n                                ...newFeedItem\n                            }\n                        });\n                    }\n                })\n            }\n        />\n    );\n}\n\n\nexport class ClassInfoSection extends Component {\n    componentDidMount() {\n        this.props.subscribeToMoreAttendees();\n    }\n\n    render() {\n        const {data, loading} = this.props;\n\n        if(loading)\n            return <div style={{display : \"grid\", height : \"100%\", alignItems : \"center\", justifyItems : \"center\"}}>\n                <CircularProgress/>\n            </div>;\n\n        return <ChartsComponent data={data}/>\n    }\n}\n","import React, {Fragment, useState} from 'react'\nimport {gql} from 'apollo-boost'\nimport {useQuery} from \"@apollo/react-hooks\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Redirect, withRouter} from \"react-router-dom\";\nimport DeletePost from \"../Post/PostDelete\";\nimport UpdatePost from \"../Post/PostEdit\";\nimport {Paper} from \"@material-ui/core\";\nimport QrComponent from \"./QrComponent\";\nimport {ROOMS} from \"../../constant\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport PublishClass from \"./ClassPublish\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CommentsPageWithData from \"./ClassInfoSubscription\";\n\nconst POST_QUERY = gql`\n    query PostQuery($id: ID!) {\n        post(id: $id) {\n            id\n            title\n            content\n            published\n            anonymous\n            author {\n                name\n            }\n            classes{\n                id\n                name\n                published\n            }\n        }\n    }\n`;\n\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop           : {\n        zIndex : theme.zIndex.drawer + 1\n    },\n    root               : {\n        height           : '100%',\n        display          : \"grid\",\n        gridTemplateRows : \"auto 1fr\",\n        gridGap          : \"2em\",\n        padding          : \"2em\"\n    },\n    topSectionsWrapper : {\n        display                        : \"grid\",\n        gridTemplateColumns            : \"1fr 1fr\",\n        gridGap                        : \"2em\",\n        [theme.breakpoints.down('sm')] : {\n            gridTemplateColumns : 'auto',\n            gridTemplateRows    : \"auto auto\",\n        },\n    },\n    paper              : {\n        padding : theme.spacing(2),\n        height  : \"100%\",\n        color   : theme.palette.text.secondary,\n    },\n    item               : {\n        padding : 10\n    },\n    selectionRoot      : {\n        '& .MuiSelect-select' : {\n            display             : \"grid\",\n            gridTemplateColumns : \"1fr auto\",\n            gridGap             : \"1em\"\n        },\n    },\n    sectionPlaceholder : {\n        display    : \"grid\",\n        alignItems : 'center',\n        height     : \"100%\"\n    }\n}));\n\n\nconst SinglePostView = (props) => {\n    const {match, history} = props,\n        {params = {}} = match,\n        {id} = params;\n\n    if(!id)\n        return <Redirect to={'/'}/>;\n\n\n    const classes = useStyles();\n    const {loading, data = {}, refetch} = useQuery(POST_QUERY, {\n        variables : {id},\n        options   : {fetchPolicy : 'network-only'}\n    });\n\n    const [selectedClassId, setSelectedClassId] = useState('');\n    const refresh = () => refetch();\n\n    const {post = {}} = data;\n\n    if(!post)\n        return <Redirect to={'/'}/>;\n\n\n    const {title, content, anonymous, classes : postClasses = []} = post;\n\n    return (\n        <Fragment>\n            <Backdrop className={classes.backdrop} open={loading}>\n                <CircularProgress color=\"inherit\"/>\n            </Backdrop>\n\n            <div className={classes.root}>\n                <div className={classes.topSectionsWrapper}>\n\n\n                    <Paper className={classes.paper} elevation={6}>\n                        <fieldset>\n                            <legend>Title</legend>\n                            {title}\n                        </fieldset>\n\n                        <fieldset>\n                            <legend>Content</legend>\n                            {content}\n                        </fieldset>\n\n                        <div style={{\n                            display        : \"flex\",\n                            flexDirection  : \"row\",\n                            justifyContent : 'space-between',\n                            alignItems     : \"center\"\n                        }}>\n                            <Typography color='textSecondary'>Answers are {!anonymous ? \"not\" : ''} anonymous</Typography>\n                            {/*<PublishPost id={id} isPublished={!!published} refresh={refresh}/>*/}\n                            <div>\n                                <DeletePost title={title} id={id} refresh={() => history.push({\n                                    pathname : ROOMS,\n                                    state    : {shouldRefetch : true}\n                                })}/>\n                                <UpdatePost title={title} id={id} content={content} refresh={() => refresh()}/>\n                            </div>\n                        </div>\n\n\n                        {!!postClasses ? <TextField\n                                className={classes.selection}\n                                select\n                                fullWidth\n                                label=\"Select class\"\n                                value={selectedClassId}\n                                name='answerType'\n                                classes={{root : classes.selectionRoot}}\n                                onChange={({target}) => setSelectedClassId(target.value)}\n                                variant=\"outlined\"\n                                helperText=\"Please select class to see the answers statistic\"\n                            >\n                                {postClasses.map(({id, name, published}) => (\n                                    <MenuItem key={id} value={id} style={{\n                                        display             : \"grid\",\n                                        gridTemplateColumns : \"1fr auto\",\n                                        gridGap             : \"1em\"\n                                    }}>\n                                        {name}\n                                        <PublishClass published={published} id={id} refresh={() => refresh()}/>\n                                    </MenuItem>))}\n                            </TextField>\n\n                            : null}\n                    </Paper>\n\n                    <Paper elevation={6} className={classes.paper}>\n                        <QrComponent postId={id} selectedClassId={selectedClassId} refresh={() => refresh()}/>\n                    </Paper>\n\n\n                </div>\n                <div>\n                    <Paper elevation={6} className={classes.paper}>\n                        {selectedClassId ? <CommentsPageWithData selectedClassId={selectedClassId}/> :\n                            <div className={classes.sectionPlaceholder}>\n                                <Typography variant='h2' align='center'>Please select class</Typography>\n                            </div>\n                        }\n                    </Paper>\n                </div>\n            </div>\n        </Fragment>\n    )\n};\n\nexport default withRouter(SinglePostView);\n","import React, {Fragment} from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Divider from \"@material-ui/core/Divider\";\n\nconst ThanksForSubmitting = () => {\n\n    return <Fragment>\n        <Grid container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            style={{height : \"100%\"}}\n        >\n            <Grid item>\n                <Paper elevation={5} style={{padding : 20}}>\n                    <Typography style={{margin : 20}} variant='h3' align='center'>Thank you for your response</Typography>\n                    <Divider/>\n                    <Typography style={{margin : 20}} variant='h5' align='center'>Your response submitted successfully</Typography>\n                </Paper>\n            </Grid>\n        </Grid>\n    </Fragment>\n};\n\nconst TimeIsOut = () => {\n\n    return <Fragment>\n        <Grid container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            style={{height : \"100%\"}}\n        >\n            <Grid item>\n                <Paper elevation={5} style={{padding : 20}}>\n                    <Typography style={{margin : 20}} variant='h3' align='center'>Oops time is out</Typography>\n                    <Divider/>\n                    <Typography style={{margin : 20}} variant='h5' align='center'>Sorry room is closed</Typography>\n                </Paper>\n            </Grid>\n        </Grid>\n    </Fragment>\n};\n\nexport {ThanksForSubmitting, TimeIsOut}\n","import React, {useState} from 'react'\nimport {gql} from 'apollo-boost'\nimport {useMutation, useQuery} from \"@apollo/react-hooks\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Redirect, withRouter} from \"react-router-dom\";\nimport {ROOM} from \"../../constant\";\nimport TextField from \"@material-ui/core/TextField/TextField\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport {Controller, useForm} from \"react-hook-form\";\nimport {ThanksForSubmitting, TimeIsOut} from \"./ThanksForSubmitting\";\n\nconst FIELDS_QUERY = gql`\n    query AnswerFormQuery($id: ID!) {\n        class(id: $id) {\n            id\n            name\n            post {\n                title\n                content\n                anonymous\n                answerType\n                id\n                fields{\n                    id\n                    label\n                    type\n                }\n            }\n            published\n\n        }\n    }\n`;\n\nconst CREATE_ATTENDEE = gql`            \n    mutation CreateAttendee($name:String!, $answers:[inputAnswer!]!, $classId:ID! ) {\n        createAttendee(name:$name, answers: $answers ,classId: $classId) {\n            id\n        }\n    }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop : {\n        zIndex : theme.zIndex.drawer + 1\n    },\n    root     : {\n        padding : '2em'\n    }\n}));\n\nconst SinglePostView = (props) => {\n    const {match} = props,\n        {params = {}} = match,\n        {id} = params;\n\n    const classes = useStyles();\n    const {control, handleSubmit, errors} = useForm();\n    const {loading, data = {}} = useQuery(FIELDS_QUERY, {\n        variables : {id},\n        options   : {fetchPolicy : 'network-only'}\n    });\n\n    const [createAttendee, {loading : submitting}] = useMutation(CREATE_ATTENDEE);\n    const [isSubmitted, setIsSubmitted] = useState(false);\n\n\n    if(!id)\n        return <Redirect to={ROOM}/>;\n\n    const {class : postClass} = data;\n\n    if(loading) {\n        return <Backdrop className={classes.backdrop} open={true}>\n            <CircularProgress color=\"inherit\"/>\n        </Backdrop>\n    }\n\n    if(postClass === null || postClass === undefined)\n        return <Redirect to={ROOM}/>;\n\n\n    const {name, post = {}, published} = postClass,\n        {fields = [], title, content, anonymous} = post;\n\n    const onSubmit = ({name = \"Anonymous\", ...fields}) => {\n        const answers = Object.keys(fields).reduce((accum, key) => {\n            const answer = {field : {id : key}, value : fields[key]};\n            accum.push(answer);\n            return accum;\n        }, []);\n        createAttendee({variables : {name : name, createdAt : new Date(), answers, classId : id}})\n            .then(() => setIsSubmitted(true));\n    };\n\n    if(published === false) {\n        return <TimeIsOut/>\n    }\n\n    if(isSubmitted) {\n        return <ThanksForSubmitting/>\n    }\n\n    return (\n        <Container fixed className={classes.root}>\n            <Backdrop className={classes.backdrop} open={submitting}>\n                <CircularProgress color=\"inherit\"/>\n            </Backdrop>\n\n            <Typography variant='h3' align='center'>Class {name}</Typography>\n            <Typography variant='h4' align='left'>{title}</Typography>\n            <Typography variant='h6' align='left'> {content}</Typography>\n\n            <form onSubmit={handleSubmit(onSubmit)}>\n                {!anonymous ?\n                    <Controller\n                        label=\"Name\"\n                        fullWidth\n                        margin='normal'\n                        variant=\"outlined\"\n                        as={TextField}\n                        rules={{required : true}}\n                        error={!!errors.name}\n                        helperText={!!errors.name ? \"This field is required\" : \"Please enter name\"}\n                        name='name'\n                        defaultValue={''}\n                        control={control}\n                    /> : null\n                }\n\n                {\n                    fields.map(({id, label, type}) => (\n                        type === \"text\" ?\n                            <Controller\n                            key={id}\n                            label={label}\n                            margin='normal'\n                            variant=\"outlined\"\n                            as={TextField}\n                            rules={{required : true}}\n                            error={!!errors[id]}\n                            helperText={!!errors[id] ? \"This field is required\" : ''}\n                            name={id}\n                            control={control}\n                            fullWidth\n                            defaultValue={''}\n                            /> :\n\n                            type === 'percentage' ?\n                                <Controller\n                                    key={id}\n                                    margin='normal'\n                                    variant='outlined'\n                                    as={TextField}\n                                    select\n                                    label={label}\n                                    control={control}\n                                    rules={{required : true}}\n                                    error={!!errors[id]}\n                                    helperText={!!errors[id] ? \"This field is required\" : ''}\n                                    name={id}\n                                    fullWidth\n                                    defaultValue={''}\n                                >\n                                    <MenuItem value=\"\"><em>None</em></MenuItem>\n                                    <MenuItem value={\"0\"}>Zero</MenuItem>\n                                    <MenuItem value={\"10\"}>Ten</MenuItem>\n                                    <MenuItem value={\"20\"}>Twenty</MenuItem>\n                                    <MenuItem value={\"30\"}>Thirty</MenuItem>\n                                    <MenuItem value={\"40\"}>Forty</MenuItem>\n                                    <MenuItem value={\"50\"}>Fifty</MenuItem>\n                                    <MenuItem value={\"60\"}>Sixty</MenuItem>\n                                    <MenuItem value={\"70\"}>Seventy</MenuItem>\n                                    <MenuItem value={\"80\"}>Eighty</MenuItem>\n                                    <MenuItem value={\"90\"}>Ninety</MenuItem>\n                                    <MenuItem value={\"100\"}>Hundred</MenuItem>\n                                </Controller>\n                                : \"Cant find current type input\"\n                    ))}\n\n                <Button color=\"primary\" variant=\"contained\" type=\"submit\" disabled={isSubmitted}>Submit Answers</Button>\n            </form>\n        </Container>\n    )\n};\n\nexport default withRouter(SinglePostView);\n","import React, {Fragment, useEffect, useState} from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {gql} from \"apollo-boost\";\nimport {useLazyQuery} from \"@apollo/react-hooks\";\nimport CircularProgress from \"@material-ui/core/CircularProgress/CircularProgress\";\nimport Backdrop from \"@material-ui/core/Backdrop/Backdrop\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {Redirect} from \"react-router-dom\";\n\nconst CLASS_QUERY = gql`\n    query ClassQuery($id: ID!) {\n        class(id: $id) {\n            id\n        }\n    }\n`;\n\nconst useStyles = makeStyles((theme) => ({\n    backdrop : {\n        zIndex : theme.zIndex.drawer + 1\n    },\n    text: {\n        color: \"#011627\"\n    },\n    white: {\n        color: 'white'\n    }\n}));\n\nconst AnswerPage = () => {\n    const classes = useStyles(),\n        [classId, setClassId] = useState(''),\n        [classInfo, setClassInfo] = useState({isError : false, isValid : false}),\n        [checkIsValid, {loading}] = useLazyQuery(CLASS_QUERY, {\n            onCompleted : ({class : classInfo}) => setClassInfo({\n                isValid : Boolean(classInfo && classInfo.id),\n                isError : !Boolean(classInfo && classInfo.id)\n            })\n        });\n\n    useEffect(() => setClassInfo({isError : false, isValid : false}), [classId]);\n\n    if(classId && classInfo.isValid) {\n        return <Redirect to={'/room/' + classId}/>;\n    }\n\n    return <Fragment>\n        <Backdrop className={classes.backdrop} open={loading}>\n            <CircularProgress color=\"inherit\"/>\n        </Backdrop>\n\n        <Grid container\n            direction=\"row\"\n            justify=\"center\"\n            alignItems=\"center\"\n            style={{height : \"100%\"}}\n        >\n            <Grid item>\n                <Typography variant={'h4'} className={classes.text}> Please specify room ID </Typography>\n                <TextField\n                    fullWidth\n                    margin='normal'\n                    variant='outlined'\n                    label=\"Room ID\"\n                    onChange={({target}) => setClassId(target.value)}\n                    error={classInfo.isError}\n                    helperText={classInfo.isError ? \"Please check room ID\" : ''}\n                />\n                <Button className={classes.white} disabled={classInfo.isError} variant='contained' color='primary' onClick={() => checkIsValid({variables : {id : classId}})}>\n                    Enter Room\n                </Button>\n            </Grid>\n        </Grid>\n    </Fragment>\n};\n\nexport default AnswerPage\n","import React, {Fragment, useEffect, useState} from 'react';\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport LogoDark from \"../../assets/logo-dark.png\";\n\nconst useStyles = makeStyles((theme) => ({\n    title : {\n        marginBottom : 15,\n        textAlign: 'center'\n    },\n    text     : {\n        textAlign: 'center',\n        marginBottom : 15,\n    },\n    container: {\n      margin: 60,\n    },\n    logo: {\n      textAlign: 'center',\n      marginTop: 60,\n      marginBottom: 30\n    }\n}));\n\nconst Public = () => {\n  const classes = useStyles();\n  return (\n    <div className={classes.container}>\n      <div className={classes.logo}>\n        <img src={LogoDark} alt=\"\" width=\"70px\" />\n      </div>\n      <div style={{ marginBottom: 30 }}>\n        <Typography variant={'h4'} className={classes.title}> Welcome to Real Time Feedo! </Typography>\n        <Typography variant={'h6'} className={classes.text}> Real-time-feedo is a web application created to ease and fasten lecturer’s interaction with the audience.  </Typography>\n        <Typography variant={'h6'} className={classes.text}> During the live lecture or speech, people sitting in the audience can give their answers, feedback and questions via their phones directly to the speaker who will see their responses on his/her device, which will help him/her to have an overall opinion of what the audience is thinking and what is under question.  </Typography>\n      </div>\n      <div>\n        <Typography variant={'h6'} className={classes.text}> If you are new here you can signup to have a new account and create rooms for your breathtaking lectures. </Typography>\n        <Typography variant={'h6'} className={classes.text}> If you already have an account then simply can log in. </Typography>\n        <Typography variant={'h6'} className={classes.text}> If you only have a Room ID and are an attendee of some stunning lecture who needs to give a Real Time Feedback than simply click on Enter Room in the menu.</Typography>\n      </div>\n      <Typography variant={'h6'} style={{ marginTop: 30, textAlign: 'center' }}> Enjoy!</Typography>\n    </div>\n  );\n};\n\nexport default Public\n","import React, {useEffect, useState} from 'react'\nimport {BrowserRouter, Redirect, Route, Switch} from 'react-router-dom'\nimport PrivateRoute from \"./PrivateRoute\"\nimport {AUTH_TOKEN, BLOG, CREATE_NEW_POST, ROOMS, ROOM, SIGN_IN, SIGN_UP, SINGLE_ROOM} from \"../../constant\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {isAuthenticated} from \"../../lib/jsUtils\";\nimport Layout from \"../Layout/Layout\";\nimport {isTokenExpired} from \"../../helper/jwtHelper\";\nimport SignInSide from \"../Authentication/Login\";\nimport SignUpSide from \"../Authentication/SignUp\";\nimport DraftsPage from \"../Drafts/Drafts\";\nimport CreatePost from \"../CreatePost/CreatePost\";\nimport SinglePostView from \"../SinglePostView/SinglePostView\";\nimport PostAnswersForm from \"../PostAnswersForm/PostAnswersForm\";\nimport AnswerPage from \"../PostAnswersForm/AnswerPage\";\nimport Public from \"../Public/Public\";\n\n// const ME_QUERY = gql`\n//   query MeQuery {\n//     me {\n//       id\n//       email\n//       name\n//     }\n//   }\n// `;\n\nconst verify = (setToken) => {\n    try {\n        const token = localStorage.getItem(AUTH_TOKEN);\n        if(token !== null && token !== undefined) {\n            const expired = isTokenExpired(token);\n            if(!expired) {\n                setToken(token)\n            } else {\n                localStorage.removeItem(AUTH_TOKEN);\n                setToken(token)\n            }\n        }\n    } catch(e) {\n        console.log('')\n    }\n};\n\n\nexport default function App({token : PropsToken}) {\n    const [, setToken] = useState(PropsToken);\n    // const {loading, error, data} = useQuery(ME_QUERY);\n\n    useEffect(() => {\n        verify(setToken)\n    }, []);\n\n    const refreshTokenFn = (token) => {\n        if(token) {\n            localStorage.setItem(AUTH_TOKEN, token)\n        } else {\n            localStorage.removeItem(AUTH_TOKEN)\n        }\n    };\n\n    // if(loading){\n    //     return <Backdrop open={true}>\n    //         <CircularProgress color=\"inherit\"/>\n    //     </Backdrop>\n    // }\n\n    return (\n        <BrowserRouter>\n            <Layout>\n                <Switch>\n                    <Route exact path='/' component={Public}/>\n                    <Route exact path={SIGN_IN} render={(props) =>\n                        isAuthenticated() ? <Redirect to={'/'}/> :\n                            <SignInSide {...props} refreshTokenFn={refreshTokenFn}/>}/>\n                    <Route exact path={SIGN_UP} render={(props) =>\n                        isAuthenticated() ? <Redirect to={'/'}/> :\n                            <SignUpSide {...props} refreshTokenFn={refreshTokenFn}/>}/>\n\n                    <PrivateRoute path={CREATE_NEW_POST} component={CreatePost}/>\n                    <PrivateRoute path={ROOMS} component={DraftsPage}/>\n                    <PrivateRoute path=\"/post/:id\" component={SinglePostView}/>\n\n                    <Route exact path={ROOM} component={AnswerPage}/>\n                    <Route exact path={SINGLE_ROOM} component={PostAnswersForm}/>\n\n                    <Route render={() =>\n                        <Paper elevation={15} style={{margin : \"20px 10px\", padding : \"20px 10px\"}}>\n                            <Typography color='textSecondary' variant={'h1'} align='center'>\n                                Error 404\n                            </Typography>\n                            <Typography color='textSecondary' variant={'h4'} align='center'>\n                                Page not found <span role='img' aria-label='hey'>&#128542;</span>\n                            </Typography>\n                        </Paper>}/>\n                </Switch>\n            </Layout>\n        </BrowserRouter>\n    )\n}\n","import React from 'react'\nimport {render} from 'react-dom'\nimport {AUTH_TOKEN} from './constant'\nimport {ThemeProvider} from '@material-ui/core/styles'\nimport {ApolloProvider} from '@apollo/react-hooks'\nimport 'dotenv/config'\nimport {getTheme} from './lib/appTheme'\n// import ApolloClient from 'apollo-boost'\nimport App from \"./components/App/App\"\n\nimport {HttpLink, InMemoryCache, ApolloClient} from 'apollo-client-preset'\nimport {WebSocketLink} from 'apollo-link-ws'\nimport {ApolloLink, split} from 'apollo-link'\nimport {getMainDefinition} from 'apollo-utilities'\n\nconst httpLink = new HttpLink({uri : 'http://localhost:4000'});\n\nconst middlewareLink = new ApolloLink((operation, forward) => {\n  // get the authentication token from local storage if it exists\n  const tokenValue = localStorage.getItem(AUTH_TOKEN);\n  // return the headers to the context so httpLink can read them\n  operation.setContext({\n    headers : {\n      Authorization : tokenValue ? `Bearer ${tokenValue}` : '',\n    },\n  });\n  return forward(operation)\n});\n\n// authenticated httplink\nconst httpLinkAuth = middlewareLink.concat(httpLink);\n\nconst wsLink = new WebSocketLink({\n  uri     : `ws://localhost:4000`,\n  options : {\n    reconnect        : true,\n    connectionParams : {\n      Authorization : `Bearer ${localStorage.getItem(AUTH_TOKEN)}`,\n    },\n  },\n});\n\nconst link = split(\n    // split based on operation type\n    ({query}) => {\n      const {kind, operation} = getMainDefinition(query)\n      return kind === 'OperationDefinition' && operation === 'subscription'\n    },\n    wsLink,\n    httpLinkAuth,\n);\n\n// apollo client setup\nconst client = new ApolloClient({\n  link              : ApolloLink.from([link]),\n  cache             : new InMemoryCache(),\n  connectToDevTools : true,\n});\n\nconst token = localStorage.getItem(AUTH_TOKEN);\n\nconst MyApp = () => (\n    <ApolloProvider client={client}>\n      <ThemeProvider theme={getTheme()}>\n        <App token={token}/>\n      </ThemeProvider>\n    </ApolloProvider>\n);\n\nrender(<MyApp/>, document.getElementById('root'));\n","import {createMuiTheme} from '@material-ui/core/styles';\n\n\nexport function getTheme() {\n    return createMuiTheme({\n        palette : {\n            primary : {\n                main : '#008DA0'\n            }\n        }\n    })\n};\n"],"sourceRoot":""}